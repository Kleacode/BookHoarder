import fs from "node:fs";
import Path from "node:path";

const GENERATE_INDEX_SCRIPT_URL =
	"https://github.com/diggle-jp/monsoon/tree/main/frontend/scripts/generate-index";

/// getter

// 拡張子なしのファイル名のゲッター
const getFilenameWithoutExtension = (file: string) =>
	Path.basename(file, Path.extname(file));

// TypeScriptファイルは拡張子があるとエラーが起こるので除去する
const removeExtensionAboutTS = (path: string) => path.replace(/\.tsx?/g, "");

/// checker

const hasTsExt = (file: string): boolean =>
	[".jsx", ".js", ".tsx", ".ts"].some((ext) => Path.extname(file) === ext);

const isIndexFile = (file: string): boolean => {
	const indexPattern = /index\.tsx?/;
	return !!file.match(indexPattern);
};

const isEntryFile = (file: string): boolean => {
	const indexPattern = /index\.[client|server]\.tsx?/;
	return !!file.match(indexPattern);
};

const hasExportsFile = (file: string): boolean => {
	// JS/TSファイルでない || index系のファイルであれば中身を見る必要がないため早期にfalseで返す
	if (!hasTsExt(file) || isIndexFile(file) || isEntryFile(file)) return false;

	const text = fs.readFileSync(file, "utf-8");
	const exportDeclarationPattern = /export /;
	return !!text.match(exportDeclarationPattern);
};

const hasExportDefaultFile = (file: string): boolean => {
	const text = fs.readFileSync(file, "utf-8");
	const exportDeclarationPattern = /export default/;
	return !!text.match(exportDeclarationPattern);
};

const isDir = (file: string): boolean => {
	const stats = fs.statSync(file);
	return stats.isDirectory();
};

/// generator

const generateIndexFileName = (tsx: boolean) =>
	tsx ? "index.tsx" : "index.ts";

const genTemplate = (file: string, targetPath: string, expDefault: boolean) => {
	// windowsだとバックスラッシュになってしまうので無理やり置換
	const path = Path.relative(targetPath, file).replace("\\", "/");
	if (expDefault)
		return `export { default as ${getFilenameWithoutExtension(
			file,
		)} } from './${removeExtensionAboutTS(path)}';`;
	return `export * from './${removeExtensionAboutTS(path)}';`;
};

const buildIndexTs = (
	files: { path: string; expDefault?: boolean }[],
	basePath: string,
) => `// generated by ${GENERATE_INDEX_SCRIPT_URL}

${files.reduce(
	(acc, file) =>
		`${acc + genTemplate(file.path, basePath, !!file.expDefault)}\n`,
	"",
)}`;

export {
	getFilenameWithoutExtension,
	removeExtensionAboutTS,
	genTemplate,
	buildIndexTs,
	hasTsExt,
	isIndexFile,
	hasExportsFile,
	generateIndexFileName,
	isDir,
	hasExportDefaultFile,
};
